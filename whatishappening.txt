Just some notes on the programs and stuff I'm using (for others, and also because I know I will forget all of this after tomorrow)

I got the iso file from the disc of the game that I have owned since like 4th grade. Got it from GameStop and everything

I'm using Ghidra to disassemble everything. I had to install an extension (https://github.com/chaoticgd/ghidra-emotionengine-reloaded?tab=readme-ov-file) so that it can work with PS2 games.

I am primarily using these two guides as a reference to start off: https://tetracorp.github.io/tokimeki-memorial/methods/decompiling-psx-games.html and https://medium.com/@zaid960928/ghidra-tutorial-introduction-a3889e138434 . Also I will have to teach myself how to read in C because I've never had to learn that one myself in school (it's gotta be similar to C++, right...?).


I honestly have not gotten any farther than the initial dump (lots of scary numbers I don't understand), but if I use/make any other programs, I will add them here.

-

8/4 update: Started parsing through more of the files, and I have a feeling there was a lto of messed up data from the disc I used. I'm looking into other tools I can use to make the dissasembly more readable, but I have no clue what a lot of this stuff does or how to use it. So far I've looked into https://github.com/chaoticgd/ccc and https://github.com/ethteck/splat/?tab=readme-ov-file and all I've gotten from this is that I should probably be using an IDE? But I'm not sure if I'm supposed to import everything from Ghidra to an IDE, or use one of these tools to do stuff in the IDE itself...

Anyway, I'll update the files here later today. Hopefully I'll figure out how to upload them via cmd by then lol

-

8/8 update: Started watching some videos to try to wrap my head around this more. Also ran my iso file through a ps2 emulator to confirm it wasn't busted. After re-analyzing the main slus file in ghidra, I ended up with a LOT more function names! I was able to find a lot of them in the offical ps2 documentation too. The only problem is...outside of the function names, nothing else matches. All of the parameters on my end are "void," whereas in the ps2 docs they are...literally anything else. Also, all of the functions except for 1 only do a syscall to a random number. This could just be ghidra being ghidra with its guessing anf stuff, but it's making it a lot harder to match up anything. The one method that DOES have more than just "syscall(random hex number)" is labelled "entry," but outside of the number of lines it has nothing else matches up. So I'm at a loss for how to proceed.

I tried to break away from that for a bit and just focused on trying to find the main method, but even that proved difficult. There is an "entry" method, but there is no labelled libc_start or whatever it's called that could point me to the actual main method. The entry method calls like 5 different unnamed functions, so it could be any one of those...maybe??? 

Anyway, I figured out how to properly export stuff into a c/c++ file, so I'll be uploading stuff to here in that format from now on. I think that'll make updating the repo easier on my end. I guess I'll continue to try again with this stuff another day.



